apply plugin: 'idea'

configure(javaProjects) {
    apply plugin: 'idea'
    apply plugin: 'eclipse-wtp'

    eclipse.classpath.downloadSources = true

    tasks.withType(org.gradle.plugins.ide.eclipse.GenerateEclipseWtpComponent) {
        project.eclipse.classpath.file.whenMerged { classpath->
            project.eclipse.wtp.component.file.whenMerged { wtpComponent ->
                wtpComponent.contextPath = project.tasks.findByName('jettyRun')?.contextPath?.replaceFirst('/','')
            }
        }
    }
}

project(':spring-security-samples-aspectj') {
    task afterEclipseImport {
        ext.srcFile = file('.classpath')
        inputs.file srcFile
        outputs.dir srcFile

        onlyIf { srcFile.exists() }

        doLast {
            def classpath = new XmlParser().parse(srcFile)

            classpath.classpathentry.findAll{ it.@path == '/spring-security-aspects' }.each { node ->
                if(node.children().size() == 0) {
                    def attrs = new Node(node,'attributes')
                    def adjtAttr = new Node(attrs,'attributes',[name: 'org.eclipse.ajdt.aspectpath', value: 'org.eclipse.ajdt.aspectpath'])
                    node.appendNode(adjtAttr)
                }
            }

            def writer = new FileWriter(srcFile)
            new XmlNodePrinter(new PrintWriter(writer)).print(classpath)
        }
    }
}
