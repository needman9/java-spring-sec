<!--
 * ========================================================================
 * 
 * Copyright 2004 Acegi Technology Pty Limited
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 
 * ========================================================================
-->

<project
   xmlns:j="jelly:core"
   xmlns:ant="jelly:ant"
   xmlns:util="jelly:util"
   xmlns:maven="jelly:maven"
  >

    <!-- =========== Set root dir =========== -->

    <j:set var="rootdir">${basedir}</j:set>

    <j:while test="${true}">
        <util:available file="${rootdir}/core/project.xml">
            <j:break/>
        </util:available>
        <j:set var="rootdir">${rootdir}/..</j:set>
    </j:while>

    <ant:dirname property="rootdirname" file="${rootdir}/project.xml"/>
    <j:set var="rootdir">${rootdirname}</j:set>
    <echo>Using root dir: ${rootdir}</echo>


   <!--
    |
    | Override the default clover-setup task from the clover plugin
    |
    -->
    <postGoal name="clover:on">

       <ant:clover-setup
           initstring="${basedir}/target/clover/database/clover_coverage.db"
           flushpolicy="interval"
           flushinterval="500">

         <ant:fileset dir="${maven.src.dir}">
            <exclude name="**/*Exception.java"/>
         </ant:fileset>

<!--         <statementContext id="nolog" regexp="^if \(logger.*\).*}"/>
         <statementContext id="nojbosslog" regexp="^if \(super.logger.*\).*}"/>
-->

       </ant:clover-setup>
    </postGoal>


   <goal name="docclean" description="Delete temporary and distribution directories for docs">

      <delete quiet="true" dir="${basedir}/${dist.ref.dir}/pdf"/>
      <delete quiet="true" dir="${basedir}/${dist.ref.dir}/html_single"/>
      <delete quiet="true" dir="${basedir}/${dist.ref.dir}/html"/>

   </goal>


   <goal name="docpdf" prereqs="preparedocs" description="Compile reference documentation to pdf">

      <mkdir dir="${basedir}/${dist.ref.dir}/pdf/images"/>

      <copy todir="${basedir}/${dist.ref.dir}/pdf/images">
         <fileset dir="${basedir}/${doc.ref.dir}/src/images">
            <include name="*.gif"/>
            <include name="*.svg"/>
            <include name="*.jpg"/>
         </fileset>
      </copy>

   <!--   ${systemScope.setProperty('javax.xml.transform.TransformerFactory','org.apache.xalan.processor.TransformerFactoryImpl')} -->
      ${systemScope.setProperty('javax.xml.transform.TransformerFactory','com.icl.saxon.TransformerFactoryImpl')}
<!--
     <style   basedir="${basedir}/${doc.ref.dir}/src/"
              extension=".fop"
              destdir="${dist.ref.dir}/pdf"
              style="${basedir}/${doc.ref.dir}/styles/fopdf.xsl"
              includes="index.xml"
      />
-->

      <java classname="com.icl.saxon.StyleSheet" fork="true" dir="${doc.ref.dir}">
         <classpath>
            <fileset dir="${basedir}/${doc.ref.dir}/lib">
               <include name="**/*.jar"/>
            </fileset>
         </classpath>
         <sysproperty key="java.awt.headless" value="true"/>
         <!-- classpath refid="maven.dependency.classpath"/ -->
         <arg value="-o"/>
         <arg value="${basedir}/${doc.ref.dir}/pdf/index.fop"/>
         <arg value="${basedir}/${doc.ref.dir}/src/index.xml"/>
         <arg value="${basedir}/${doc.ref.dir}/styles/fopdf.xsl"/>
      </java>

      <java classname="org.apache.fop.apps.Fop" fork="true" dir="${doc.ref.dir}">
         <classpath>
            <fileset dir="${basedir}/${doc.ref.dir}/lib">
               <include name="**/*.jar"/>
            </fileset>
         </classpath>
         <sysproperty key="java.awt.headless" value="true"/>
         <!-- classpath refid="maven.dependency.classpath"/ -->
         <arg value="${basedir}/${doc.ref.dir}/pdf/index.fop"/>
         <arg value="${basedir}/${doc.ref.dir}/pdf/acegi-security-reference.pdf"/>
      </java>

      <delete file="${dist.ref.dir}/pdf/index.fop"/>

   </goal>


   <goal name="dochtml" prereqs="preparedocs" description="Compile reference documentation to chunked html">

   <!--   ${systemScope.setProperty('javax.xml.transform.TransformerFactory','org.apache.xalan.processor.TransformerFactoryImpl')} -->
      ${systemScope.setProperty('javax.xml.transform.TransformerFactory','com.icl.saxon.TransformerFactoryImpl')}

      <mkdir dir="${doc.ref.dir}/html/images"/>

      <copy todir="${basedir}/${doc.ref.dir}/html/images">
         <fileset dir="${basedir}/${doc.ref.dir}/src/images">
            <include name="*.gif"/>
            <include name="*.svg"/>
            <include name="*.jpg"/>
         </fileset>
      </copy>
<!--
     <style   basedir="${basedir}/${doc.ref.dir}/src/"
              destdir="${doc.ref.dir}/html"
              style="${basedir}/${doc.ref.dir}/styles/html_chunk.xsl"
              includes="index.xml"
      >
         <classpath refid="maven.dependency.classpath"/>
      </style>
-->
      <java classname="com.icl.saxon.StyleSheet" fork="true" dir="${dist.ref.dir}/html/">
         <classpath>
            <fileset dir="${basedir}/${doc.ref.dir}/lib">
               <include name="**/*.jar"/>
            </fileset>
         </classpath>
         <!-- classpath refid="maven.dependency.classpath"/ -->
         <arg value="${basedir}/${doc.ref.dir}/src/index.xml"/>
         <arg value="${basedir}/${doc.ref.dir}/styles/html_chunk.xsl"/>
      </java>

   </goal>


   <goal name="dochtmlsingle" description="Compile reference documentation to single html">

      <mkdir dir="${dist.ref.dir}/html_single/images"/>

      <copy todir="${basedir}/${dist.ref.dir}/html_single/images">
         <fileset dir="${basedir}/${doc.ref.dir}/src/images">
            <include name="*.gif"/>
            <include name="*.svg"/>
            <include name="*.jpg"/>
         </fileset>
      </copy>

      <java classname="com.icl.saxon.StyleSheet" fork="true" dir="${doc.ref.dir}">
         <classpath>
            <fileset dir="${basedir}/${doc.dir}/reference/lib">
               <include name="**/*.jar"/>
            </fileset>
         </classpath>
         <arg value="-o"/>
         <arg value="${basedir}/${dist.ref.dir}/html_single/index.html"/>
         <arg value="${basedir}/${doc.ref.dir}/src/index.xml"/>
         <arg value="${basedir}/${doc.ref.dir}/styles/html.xsl"/>
      </java>

   </goal>

   <goal name="refdoc" prereqs="dochtml,dochtmlsingle,docpdf" description="Generate and copy reference documentation">
      <mkdir dir="${maven.build.dir}/docs"/>
      <mkdir dir="${maven.build.dir}/docs/ref"/>

      <copy todir="${maven.build.dir}/docs/ref">
         <fileset dir="${doc.ref.dir}/html"/>
      </copy>
      <copy file="${doc.ref.dir}/pdf/acegi-security-reference.pdf"
          todir="${maven.build.dir}/docs/ref"/>
      <copy file="${doc.ref.dir}/html_single/index.html"
          tofile="${maven.build.dir}/docs/ref/acegi-security-reference.html"/>
   </goal>

</project>
