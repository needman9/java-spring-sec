# Ant properties for building the Acegi Security System for Spring.

# Values in this file will be overriden by any values with the same name
# in the user-created build.properties file.

# $Id$

# Project version
acegi-security-version=0.7.0-pre

# Project name
name=acegi-security-system-for-spring

# Compile with debug code
debug=on

# With the exception of 'dist' and 'docs/api', all artifacts produced by
# the build go somewhere underneath the target dir
target.dir=${basedir}/target

# Main source tree will be compiled into this directory tree
target.classes.dir=${target.dir}/classes

# Test tree will be compiled into this directory tree
target.testclasses.dir=${target.dir}/test-classes

# Names of distribution jar files
acegi-security.jar=acegi-security.jar

# Names of distribution jar files
acegi-taglib.jar=acegi-security-taglib.jar

# Name of Zip file containing all project sources
acegi-security-src.zip=acegi-security-src.zip

# Library directory within project. Where third party jars reside.
lib.dir=${basedir}/lib

# Source directory under the current root
src.dir=${basedir}/src

# Directory for generated API documentation -->
javadocs.dir=${basedir}/docs/api

# Test directory under the current root
test.dir=${basedir}/test

# Wildcards to be matched by JUnit tests
# Convention is that our JUnit test classes have names like XXXXTestSuite or XXXTests
test.includes=**/*TestSuite.class **/*Tests.class

# Wildcards to exclude among JUnit tests
test.excludes=

# Directory where JUnit test reports are written
target.junit.reports.dir=${target.dir}/test-reports

# Directory we generate distribution units such as jars and zips to
dist.dir=dist

# Directory for release ZIPs
target.release.dir=${target.dir}/release

# ZIP file that gets created for a release
release.zip=acegi-security-${acegi-security-version}.zip
release-with-dependencies.zip=acegi-security-${acegi-security-version}-with-dependencies.zip

# Path prefix within the ZIP file
release.path=acegi-security-${acegi-security-version}

# This is only used by the ant build to kill this directory, where IDEs may
# place other class files (for samples, etc.)
target.otherclasses.dir=${target.dir}/other-classes

# Where to find code formatting rules
jalopy.xml=jalopy.xml

# Clover properties
target.clover.dir=${target.dir}/clover
clover.dbdir=${target.clover.dir}/db
clover.dbfile=acegi_security_coverage.db
clover.tmpdir=${target.clover.dir}/tmp
target.clover.html.dir=${target.dir}/clover-reports

# ------------------------------------------------------------------------
#     docbook reference documentation
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
doc.dir=docs
doc.ref.dir=docs/reference
dist.ref.dir=docs/reference


# ------------------------------------------------------------------------
#     maven configuration
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# Add this to a build.properties file
#maven.username=your_sourceforge_username

maven.repo.remote=http://www.ibiblio.org/maven,http://acegisecurity.sourceforge.net/maven,http://maven-plugins.sourceforge.net/repository

# Site generation properties
maven.xdoc.date = left
maven.xdoc.version = ${pom.currentVersion}
maven.xdoc.distributionUrl=http://sourceforge.net/project/showfiles.php?group_id=104215
#maven.xdoc.distributionUrl=http://acegisecurity.sourceforge.net/maven/acegisecurity/jars
maven.html2xdoc.enabled=true

# Deploying site
maven.remote.group=acegisecurity
maven.site.deploy.method=ssh

# Repository to deploy to
maven.repo.list=acegi

maven.repo.acegi=sftp://shell.sourceforge.net
maven.repo.acegi.directory=/home/groups/a/ac/acegi/htdocs/maven
maven.repo.acegi.group=acegi
# These must be set elsewhere
#maven.repo.acegi.username=
#maven.repo.acegi.privatekey=
#maven.repo.acegi.passphrase=

# Clover jar overriding to use the licensed version of clover
maven.jar.override=on
maven.jar.clover=${rootdir}/lib/clover/clover.jar

# License plugin settings
maven.license.licenseFile=${rootdir}/LICENSE.txt

# multiproject
maven.multiproject.basedir=${rootdir}
maven.multiproject.includes=core/project.xml,adapters/*/project.xml,samples/*/project.xml

# multichanges
maven.multichanges.basedir=${maven.multiproject.basedir}
maven.multichanges.includes=${maven.multiproject.includes}

# dashboard
maven.dashboard.basedir=${maven.multiproject.basedir}
maven.dashboard.includes=${maven.multiproject.includes}
maven.dashboard.aggregators = cserrors,cswarnings,clovertpc,cloverloc,cloverncloc,junittests,junitfailures,juniterrors,junitpassrate,simiantdl
maven.dashboard.rungoals=false
maven.dashboard.runreactor=false
maven.multiproject.site.goals=site,dashboard:report-single
# needed to get clover reports running dashboard-single
maven.clover.report.xml=true



#------------------------------------------------------------------------
# Commons Attributes
#------------------------------------------------------------------------

# org.apache.commons.attributes.enable=true
# org.apache.commons.attributes.index.enable=true

