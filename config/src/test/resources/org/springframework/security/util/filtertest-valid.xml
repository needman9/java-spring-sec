<?xml version="1.0" encoding="UTF-8"?>

<!--
 * Copyright 2004 Acegi Technology Pty Limited
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 *
 * $Id: filtertest-valid.xml 3497 2008-12-20 00:16:49Z ltaylor $
-->
<beans default-lazy-init="true" xmlns="http://www.springframework.org/schema/beans"
    xmlns:sec="http://www.springframework.org/schema/security"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-2.0.xsd">

    <bean id="mockFilter" class="org.springframework.security.web.wrapper.SecurityContextHolderAwareRequestFilter"/>

    <bean id="mockFilter2" class="org.springframework.security.web.wrapper.SecurityContextHolderAwareRequestFilter"/>

    <!-- These are just here so we have filters of a specific type to check the ordering is as expected -->
    <bean id="sif" class="org.springframework.security.web.context.SecurityContextPersistenceFilter"/>

    <bean id="apf" class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationProcessingFilter">
       <property name="authenticationManager">
           <bean class="org.springframework.security.MockAuthenticationManager"/>
       </property>
    </bean>

    <bean id="mockNotAFilter" class="org.springframework.security.web.util.AntUrlPathMatcher"/>

    <bean id="filterChain" class="org.springframework.security.web.FilterChainProxy">
        <sec:filter-chain-map path-type="ant">
            <sec:filter-chain pattern="/foo/**" filters="mockFilter"/>
            <sec:filter-chain pattern="/some/other/path/**" filters="mockFilter"/>
            <sec:filter-chain pattern="/do/not/filter" filters="none"/>
        </sec:filter-chain-map>
    </bean>

<!-- TODO: Refactor to replace the above (SEC-1034: 'new' is now the only valid syntax) -->
    <bean id="newFilterChainProxy" class="org.springframework.security.web.FilterChainProxy">
        <sec:filter-chain-map path-type="ant">
            <sec:filter-chain pattern="/foo/**" filters="mockFilter"/>
            <sec:filter-chain pattern="/some/other/path/**"
                filters="
                sif,
                mockFilter,
                mockFilter2"
                />
            <sec:filter-chain pattern="/do/not/filter" filters="none"/>
            <sec:filter-chain pattern="/**" filters="sif,apf,mockFilter"/>
        </sec:filter-chain-map>
    </bean>

    <bean id="newFilterChainProxyNoDefaultPath" class="org.springframework.security.web.FilterChainProxy">
        <sec:filter-chain-map path-type="ant">
            <sec:filter-chain pattern="/foo/**" filters="mockFilter"/>
            <sec:filter-chain pattern="/*.bar" filters="mockFilter,mockFilter2"/>
        </sec:filter-chain-map>
    </bean>

    <bean id="newFilterChainProxyWrongPathOrder" class="org.springframework.security.web.FilterChainProxy">
        <sec:filter-chain-map path-type="ant">
            <sec:filter-chain pattern="/foo/**" filters="mockFilter"/>
            <sec:filter-chain pattern="/**" filters="
                                sif,
                                apf,
                                mockFilter"/>
            <sec:filter-chain pattern="/some/other/path/**" filters="sif,mockFilter,mockFilter2"/>
        </sec:filter-chain-map>
    </bean>

    <bean id="newFilterChainProxyRegex" class="org.springframework.security.web.FilterChainProxy">
        <sec:filter-chain-map path-type="regex">
            <sec:filter-chain pattern="\A/foo/.*\Z" filters="mockFilter"/>
            <sec:filter-chain pattern="\A/s[oO]me/other/path/.*\Z" filters="sif,mockFilter,mockFilter2"/>
            <sec:filter-chain pattern="\A/do/not/filter\Z" filters="none"/>
            <sec:filter-chain pattern="\A/.*\Z" filters="sif,apf,mockFilter"/>
        </sec:filter-chain-map>
    </bean>

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer" />

    <bean id="sec1235FilterChainProxy" class="org.springframework.security.web.FilterChainProxy">
        <sec:filter-chain-map path-type="ant">
        <sec:filter-chain pattern="${sec1235.pattern1}*" filters="sif,apf,mockFilter"/>
        <sec:filter-chain pattern="${sec1235.pattern2}" filters="mockFilter2"/>
        <sec:filter-chain pattern="/**" filters="sif"/>
        </sec:filter-chain-map>
    </bean>

    <bean id="newFilterChainProxyNonNamespace" class="org.springframework.security.web.FilterChainProxy">
        <property name="matcher">
            <bean class="org.springframework.security.web.util.AntUrlPathMatcher"/>
        </property>
        <property name="filterChainMap">
            <map>
                <entry key="/foo/**">
                    <list>
                      <ref local="mockFilter"/>
                    </list>
                </entry>
                <entry key="/some/other/path/**">
                    <list>
                      <ref local="sif"/>
                      <ref local="mockFilter"/>
                      <ref local="mockFilter2"/>
                    </list>
                </entry>
                <entry key="/do/not/filter">
                    <list/>
                </entry>
                <entry key="/**">
                    <list>
                      <ref local="sif"/>
                      <ref local="apf"/>
                      <ref local="mockFilter"/>
                    </list>
                </entry>
            </map>
        </property>
    </bean>

</beans>
