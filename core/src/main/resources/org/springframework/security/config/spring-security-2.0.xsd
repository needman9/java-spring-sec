<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="http://www.springframework.org/schema/security" xmlns:security="http://www.springframework.org/schema/security">
  <!-- targetNamespace="http://www.springframework.org/schema/security" -->
  <xs:attributeGroup name="path-type">
    <xs:attribute name="pathType" use="required">
      <xs:annotation>
        <xs:documentation>Defines the type types of pattern used to specify URL paths. Defaults to "ant"</xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="regex"/>
          <xs:enumeration value="ant"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:attributeGroup>
  <xs:element name="autoconfig">
    <xs:annotation>
      <xs:documentation>Provides automatic security configration for a application</xs:documentation>
    </xs:annotation>
    <xs:complexType/>
  </xs:element>
  <xs:element name="ldap">
    <xs:annotation>
      <xs:documentation>Sets up an ldap authentication provider, optionally with an embedded ldap server</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:attributeGroup ref="security:ldap.attlist"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="ldap.attlist">
    <xs:attribute name="url" type="xs:string">
      <xs:annotation>
        <xs:documentation>Specifies the ldap server Url. If omitted, an embedded server will be created    </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="ldif" default="classpath:*.ldif" type="xs:string">
      <xs:annotation>
        <xs:documentation>Explicitly specify an ldif file resource to load </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>
  <xs:element name="intercept-methods">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="security:protect"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="protect">
    <xs:annotation>
      <xs:documentation>Defines a protected method and the access control configuration attributes that apply to it</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:attributeGroup ref="security:protect.attlist"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="protect.attlist">
    <xs:attribute name="method" use="required" type="xs:string">
      <xs:annotation>
        <xs:documentation>A method name </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="access" use="required" type="xs:string">
      <xs:annotation>
        <xs:documentation>Access configuration attributes list that applies to the method, e.g. "ROLE_A,ROLE_B"</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>
  <xs:element name="http">
    <xs:annotation>
      <xs:documentation>Container element for HTTP security configuration</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="security:intercept-url"/>
        <xs:element ref="security:form-login"/>
        <xs:element ref="security:http-basic"/>
        <xs:element ref="security:logout"/>
        <xs:element ref="security:concurrent-session-control"/>
        <xs:element ref="security:remember-me"/>
      </xs:choice>
      <xs:attributeGroup ref="security:http.attlist"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="http.attlist">
    <xs:attribute name="createSession" default="ifRequired">
      <xs:annotation>
        <xs:documentation>Controls the eagerness with which an HTTP session is created.</xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="ifRequired"/>
          <xs:enumeration value="always"/>
          <xs:enumeration value="never"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="pathType">
      <xs:annotation>
        <xs:documentation>Defines the type types of pattern used to specify URL paths. Defaults to "ant"</xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="regex"/>
          <xs:enumeration value="ant"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="lowerCaseComparisons" default="true">
      <xs:annotation>
        <xs:documentation>Whether test URLs should be converted to lower case prior to comparing with defined path patterns.</xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="accessDecisionManager" type="xs:string"/>
  </xs:attributeGroup>
  <xs:element name="intercept-url">
    <xs:annotation>
      <xs:documentation>Specifies the access attributes and/or filter list for a particular set of URLs.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:attributeGroup ref="security:intercept-url.attlist"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="intercept-url.attlist">
    <xs:attribute name="pattern" use="required" type="xs:string"/>
    <xs:attribute name="access" type="xs:string">
      <xs:annotation>
        <xs:documentation>The access configuration attributes that apply for the configured path.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="filters">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="none"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="requiresChannel">
      <xs:annotation>
        <xs:documentation>Used to specify that a URL must be accessed over http or https</xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="http"/>
          <xs:enumeration value="https"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:attributeGroup>
  <xs:element name="logout">
    <xs:complexType>
      <xs:attributeGroup ref="security:logout.attlist"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="logout.attlist">
    <xs:attribute name="logoutUrl" default="/j_spring_security_logout" type="xs:string"/>
    <xs:attribute name="logoutSuccessUrl" default="/" type="xs:string"/>
    <xs:attribute name="invalidateSession" default="true">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:attributeGroup>
  <xs:element name="form-login">
    <xs:annotation>
      <xs:documentation>Sets up a form login configuration</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:attributeGroup ref="security:form-login.attlist"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="form-login.attlist">
    <xs:attribute name="loginUrl" default="/j_spring_security_check" type="xs:string">
      <xs:annotation>
        <xs:documentation>The URL that the form is submitted to</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="loginPage" type="xs:string">
      <xs:annotation>
        <xs:documentation>The URL for the login page</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>
  <xs:element name="filter-chain-map">
    <xs:annotation>
      <xs:documentation>Used to explicitly configure a FilterChainProxy instance with a FilterChainMap</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="security:filter-chain"/>
      </xs:sequence>
      <xs:attributeGroup ref="security:filter-chain-map.attlist"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="filter-chain-map.attlist">
    <xs:attributeGroup ref="security:path-type"/>
  </xs:attributeGroup>
  <xs:element name="filter-chain">
    <xs:complexType>
      <xs:attributeGroup ref="security:filter-chain.attlist"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="filter-chain.attlist">
    <xs:attribute name="pattern" use="required" type="xs:string"/>
    <xs:attribute name="filters" use="required" type="xs:string"/>
  </xs:attributeGroup>
  <xs:element name="http-basic">
    <xs:annotation>
      <xs:documentation>Adds support for basic authentication</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:attributeGroup ref="security:http-basic.attlist"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="http-basic.attlist">
    <xs:attribute name="realm" use="required" type="xs:string"/>
  </xs:attributeGroup>
  <xs:element name="concurrent-session-control">
    <xs:complexType>
      <xs:attributeGroup ref="security:concurrent-sessions.attlist"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="concurrent-sessions.attlist">
    <xs:attribute name="maxSessions" type="xs:positiveInteger"/>
    <xs:attribute name="expiredUrl" type="xs:string"/>
    <xs:attribute name="exceptionIfMaximumExceeded">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="true"/>
          <xs:enumeration value="false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:attributeGroup>
  <xs:element name="remember-me">
    <xs:complexType>
      <xs:attributeGroup ref="security:remember-me.attlist"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="remember-me.attlist">
    <xs:attribute name="key" use="required" type="xs:string"/>
    <xs:attribute name="tokenRepository" type="xs:string"/>
    <xs:attribute name="datasource" type="xs:string"/>
  </xs:attributeGroup>
  <xs:element name="authentication-provider">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="security:user-service"/>
        <xs:element ref="security:jdbc-user-service"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="user-service">
    <xs:complexType>
      <xs:choice>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="security:user"/>
        <xs:element ref="security:jdbc-user-service"/>
      </xs:choice>
      <xs:attributeGroup ref="security:user-service.attlist"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="user-service.attlist">
    <xs:attribute name="properties" type="xs:string"/>
  </xs:attributeGroup>
  <xs:element name="user">
    <xs:complexType>
      <xs:attributeGroup ref="security:user.attlist"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="user.attlist">
    <xs:attribute name="name" use="required" type="xs:string"/>
    <xs:attribute name="password" use="required" type="xs:string"/>
    <xs:attribute name="authorities" use="required" type="xs:string"/>
  </xs:attributeGroup>
  <xs:element name="jdbc-user-service">
    <xs:complexType/>
  </xs:element>
</xs:schema>
