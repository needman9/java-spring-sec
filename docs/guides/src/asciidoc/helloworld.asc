= Hello Spring Security Java Config
Rob Winch
{spring-security-version}
:starter-appname: insecure 
:completed-appname: helloworld-jc
:verify-starter-app-include: hello-includes/verify-insecure-app.asc

This guide provides instructions on how to add Spring Security to an existing application without the use of XML.

include::hello-includes/setting-up-the-sample.asc[]

include::hello-includes/secure-the-application.asc[]

=== Registering Spring Security with the war

We have created the Spring Security configuraiton, but we still need to register it with the war. This can be done using the following steps:

* Navigate to the *Package Explorer* view
* Right click the *org.springframework.security.samples.config* package within the *spring-security-samples-{starter-appname}* project
* Select *New->Class*
* Enter _SecurityWebApplicationInitializer_ for the *Name*
* Click *Finish*
* Replace the file with the following contents:

.src/main/java/org/springframework/security/samples/config/SecurityWebApplicationInitializer.java
[source,java]
----
package org.springframework.security.samples.config;

import org.springframework.security.web.context.*;

public class SecurityWebApplicationInitializer
      extends AbstractSecurityWebApplicationInitializer {

    public SecurityWebApplicationInitializer() {
        super(SecurityConfig.class);
    }
}
----

The `SecurityWebApplicationInitializer` will do the following things:

* Automatically register the springSecurityFilterChain Filter for every URL in your application
* Add a ContextLoaderListener that loads the <<security-config-java,`SecurityConfig`>>.

NOTE: Since we were not already using Spring, this is a simple way to add our <<security-config-java,`SecurityConfig`>>. If we were already using Spring, then we should add our <<security-config-java,`SecurityConfig`>> with the reset of our Spring configuration (i.e. a subclass of AbstractContextLoaderInitializer or AbstractDispatcherServletInitializer) and use the default constructor instead.

include::hello-includes/exploring-the-secured-application.asc[]

== Conclusion

You should now now how to secure your application using Spring Security without using any XML.
