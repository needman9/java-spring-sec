<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd 
http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-2.0.xsd">

	<!-- http://www.springframework.org/schema/security file:/Users/vpuri/interface21/acegisecurity/trunk/acegisecurity/core/src/main/resources/org/acegisecurity/config/spring-security-2.0.xsd -->
	<!-- http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-2.0.xsd" -->

	<!-- 
		<security:autodetect>
		really behind the scenes will create an annotations-based
		MethodSecurityInterceptor with the MethodDefinitionSourceAdvisor that
		automatically detects annotated interfaces. So basically edit the
		Clinic interface and pop @Secured("ROLE_SUPERVISOR") onto the storeVisit
		method, re-run the app, and prove to the users that only users with
		ROLE_SUPERVISOR in their properties file are now able to store a visit
		to the clinic.
	-->
	<security:autoconfig/>
	<!-- UserDetailsService is the most commonly frequently Acegi Security interface implemented by end users -->
	<security:principal-repository id="userDetailsService">
		<security:properties
			resource="classpath:org/acegisecurity/config/user.properties" />
	</security:principal-repository>
	
	<bean id="bankService" class="org.acegisecurity.BankServiceImpl"/>
	
	
</beans>
